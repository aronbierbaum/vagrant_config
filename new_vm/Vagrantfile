# -*- mode: ruby -*-
# vi: set ft=ruby :

# TODO: Change username to aronb

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|  
   config.vm.hostname = "aronb-dev-vm"

   config.vm.provider :virtualbox do |prov|
      #config.vm.box = "chef/centos-6.6"
      config.vm.box = "boxcutter/boxes/centos71"
      prov.name = "aronb-dev-vm"
      prov.update_guest_tools = true
   end

   config.vm.provider :parallels do |prov|
      #config.vm.box = "parallels/centos-6.6"
      config.vm.box = "parallels/centos-7.1"
      prov.name = "aronb-dev-vm"
      prov.update_guest_tools = true
   end

   # CentOS
   config.vm.provision :shell, inline: 'yum install -y subversion vim git python-argparse'
   # Ubuntu
   #config.vm.provision :shell, inline: 'apt-get update && apt-get install -y subversion vim git'

#   config.vm.provision "shell", inline:
#     "ps aux | grep 'sshd:' | awk '{print $2}' | xargs kill"

   config.ssh.forward_agent = true

   # XXX: How do we only do this if the user doesn't exist.
   #config.vm.provision :shell, inline: 'useradd -m -s /bin/bash -U aronb'
   #config.vm.provision :shell, inline: "echo '%aronb ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/aronb"
   #config.vm.provision :shell, inline: 'chmod 440 /etc/sudoers.d/aronb'

   # NOTE: We install Docker using taccs_ctl.
   # TODO: docker login quay.io
   #config.vm.provision "docker"
   #docker login --username="aronbierbaum" --email="aronbierbam@gmail.com"

   # Add common git config
   config.vm.provision "Git Config", type: "shell" do |s|
      s.privileged = false
      s.inline = <<-SHELL
         git config --global push.default upstream
         git config --global branch.autosetuprebase always
         git config --global user.name "Aron Bierbaum"
         git config --global user.email "aronbierbaum@gmail.com"
         git config --global alias.co "checkout"
         git config --global alias.puller "pull --rebase"
         git config --global alias.showlocal "log --branches --not --remotes --simplify-by-decoration --decorate --oneline"
         git config --global alias.find '!git ls-files | grep -i'
      SHELL
   end

   # TODO: Set the username to use for SSH for certain servers.
   config.vm.provision "ssh_config", type: "shell" do |s|
      s.privileged = false
      s.inline = <<-SHELL
         touch /home/vagrant/.ssh/config
         chmod 600 /home/vagrant/.ssh/config
         echo "Host yogi.priority5.com" >> /home/vagrant/.ssh/config
         echo "User aronb" >> /home/vagrant/.ssh/config
         echo "Host yogi" >> /home/vagrant/.ssh/config
         echo "User aronb" >> /home/vagrant/.ssh/config
      SHELL
   end

   # NOTE: We can't clone TACCS source until we ssh into VM.
   # mkdir -p Source/p5
   # cd Source/p5/
   # git clone git@github.com:priority5/taccs.git

   # Host example.com
   # User jdoe

   #config.vm.synced_folder "deploy/", "/home/vagrant/deploy"

   # Configuration for Virtualbox provider
   config.vm.provider :virtualbox do |vb|
      vb.name = "aronb-dev-vm"

      # Memory
      vb.customize [ "modifyvm", :id, "--memory", "8192" ]
      # Chipset (Supposedly better CPU performance)
      #vb.customize [ "modifyvm", :id, "--chipset", "ich9" ]
      # NIC 1 (Better TCP over NAT performance, at least on Windows)
      #vb.customize ["modifyvm", :id, "--nictype1", "virtio"]
      #vb.customize ["modifyvm", :id, "--natsettings1", "9000,1024,1024,1024,1024"]
      # NIC 2 (Host Only Access)
      #vb.customize ["modifyvm", :id, "--nictype2", "virtio"]
      #vb.customize ["modifyvm", :id, "--hostonlyadapter2", "VirtualBox Host-Only Ethernet Adapter"]

      # Could make this optional.
      #if ENV["VBOX_VM_PATH"]

      # Add Second Drive
      file_to_disk = 'D:\VirtualBox VMs\deps.vdi'
      unless File.exist?(file_to_disk)
         vb.customize ['createhd', '--filename', file_to_disk, '--size', 500 * 1024]
      end

      # CentOS
      vb.customize ['storageattach', :id, '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]
      # Ubuntu
      #vb.customize ['storageattach', :id, '--storagectl', 'SATAController', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', file_to_disk]

      # XXX: Is this needed.
      #vb.customize ["storagectl", :id, "--name", "SATA", "--sataportcount", 2, "--hostiocache", "on"]
      #vb.customize ["storageattach", :id,  "--storagectl", "SATA", "--port", 1, "--device", 0,  "--type", "hdd", "--medium", disk2_path]

      config.vm.network "public_network", :send_hostname_in_dhcp_request => true
   end

end
